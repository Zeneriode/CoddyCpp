// Copyright 2022 Zener
// Created by Zener on 7/13/2022.
//

#include <climits>   // для использования самых больших и самых малых значений для каждого типа
#include <iostream>  // для принятия и вывода значений в консоли


/* В программировании существует 4 самых простых типа значений:
 * целые числа, числа с дробью, символы и логические значения.
 * И некоторые из этих типов значений делятся еще на несколько типов, чтобы экономить в памяти */

// тип 1 - целые числа

// короткое целое число,
// занимает 2 байта памяти, может хранить числа от -32,768 до 32,767
__int16 the_smallest = 0;
// обычное целое число,
// занимает 4 байта, может хранить числа от -2,147,483,648 до 2,147,483,647
int middle = 0;
// Самое большое целое число,
// занимает 8 байт,
// может хранить числа от -9223372036854775808 до 9223372036854775807
__int64 the_biggest = 0;

// тип 2 - числа с дробью

// Самое малое число, которое может быть с дробью,
// занимает 4 байта
float the_smallestF = 0;
// Обычное число, которое может быть с дробью,
// занимает 8 байт
double middleF = 0;
// Самое большое число с дробью,
// занимает 12 байт
long double the_biggestF = 0;

// тип 3 - символы
// С помощью этой переменной можно сохранить 1 символ,
// занимает 1 байт
char sign = 'a';

// тип 4 - логические значения
// С помощью этой переменной можно сохранить 1 логическое значение:
// true или false
bool true_or_false = true;


/// Разбор ввода и вывода значений в консоли + пределы значений
void in_out() {
    // Чтобы получить какое-то значение,
    // нужно использовать namespace std,
    // а также команду cin
    std::cin >> middle;  // можно ввести любое число для int

    // Программа будет считывать любое нажатие клавиш,
    // но продолжит выполнение после ввода только после нажатия на enter
    // Тем не менее, мы можем записать сразу 2 числа в одной строке

    std::cin >> sign;  // нужно ввести любой символ

    // Чтобы теперь вывести наши значения, нужно использовать команду cout
    std::cout << "Your number: "
              << middle << '\n'
              << "Your sign: "
              << sign << std::endl;
    // Главное - не забывать, что пробелы в строках надо выставлять самому,
    // иначе вывод будет выглядеть плохо

    // Пример вывода пределов для некоторых значений
    std::cout << "The smallest number: "
              << LLONG_MIN
              << std::endl;
    std::cout << "The biggest number: "
              << LLONG_MAX
              << std::endl;
    std::cout << "true or false will be translated as 1 or 0. Example: "
              << true_or_false
              << std::endl;
}

/// Переменные, если такое возможно, можно превращать друг в друга
/// То есть можно значение одного типа переделать в другой
void trans() {
    // Теперь целое число превратилось в дробное
    the_smallestF = static_cast<float>(the_smallest);

    // Теперь мы получаем просто пробел
    sign = static_cast<char>(true_or_false);
}
